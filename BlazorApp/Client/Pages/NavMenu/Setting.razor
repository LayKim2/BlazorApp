@page "/admin/setting"
@attribute [Authorize]

<h3>Setting</h3>

<EditForm Model="Portfolio">
    <div class="mb-0">
        <label for="imageUrl">Image Url</label>
        <InputText id="imageUrl" @bind-Value="Portfolio.SideImageUrl" class="form-control"></InputText>
    </div>
    <div clclass="mb-0" style="display: flex; flex-wrap: wrap; flex-direction: row; justify-content:center;">
        @if (!string.IsNullOrEmpty(Portfolio.SideImageUrl))
        {
            <img src="@Portfolio.SideImageUrl" />
        }
        else if (!string.IsNullOrEmpty(Portfolio.SideImageData))
        {
            <MudCard Class="ma-2">
                <MudCardContent>
                    <MudImage Src="@Portfolio.SideImageData" />
                </MudCardContent>
                <MudCardActions Style="justify-content: center;">
                    <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@(() =>RemoveImage())">Remove</MudButton>
                </MudCardActions>
            </MudCard>
        }
    </div>
    <div class="mb-0">
        <label for="images">Image(s)</label>
        <InputFile id="fileInput" OnChange="OnFileChange" hidden multiple accept=".jpg, .jpeg, .png" />
        <MudFab HtmlTag="label" Size="Size.Small" Color="Color.Primary" StartIcon="@Icons.Filled.CloudUpload" for="fileInput" />
    </div>

</EditForm>

@code {

    BlazorApp.Shared.Portfolio Portfolio = new BlazorApp.Shared.Portfolio();


    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/png";

        foreach (var image in e.GetMultipleFiles(int.MaxValue))
        {
            var resizeImage = await image.RequestImageFileAsync(format, 200, 200);
            var buffer = new byte[resizeImage.Size];
            await resizeImage.OpenReadStream().ReadAsync(buffer);
            var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            Portfolio.SideImageData = imageData;
        }
    }

    void RemoveImage()
    {
        var image = Portfolio.SideImageData;
        if (image != null)
        {
            Portfolio.SideImageData = null;
        }
    }

}
