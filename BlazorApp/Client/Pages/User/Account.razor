@page "/admin/account"
@inject IAuthService AuthService
@attribute [Authorize]
@*
<AuthorizeView>
    <h3>Hi! You`re logged in with <i>@context.User.Identity.Name</i></h3>
</AuthorizeView>

<br /><hr /><br />
*@


<BlazorApp.Client.Shared.Components.MainTitle Title="Account" Description="Manage your account" />
<MudBlazor.MudTabs Elevation="25" Color="MudBlazor.Color.Transparent" Rounded="true" PanelClass="mt-6">
    <MudBlazor.MudTabPanel Text="Profile">
        <Profile />
    </MudBlazor.MudTabPanel>
    <MudBlazor.MudTabPanel Text="Security">
        <Security />
    </MudBlazor.MudTabPanel>
</MudBlazor.MudTabs>


@*original*@
@*<h5><b>Change Password</b></h5>*@

@*<EditForm Model="request" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="password">New Password</label>
        <InputText id="password" @bind-Value=request.Password class="form-control" type="password" />
        <ValidationMessage For="@(() => request.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm New Password</label>
        <InputText id="confirmPassword" @bind-Value=request.ConfirmPassword class="form-control" type="password" />
        <ValidationMessage For="@(() => request.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Apply</button>
</EditForm>*@
@*@message*@

@code {
    //UserChangePassword request = new UserChangePassword();

    //string message = string.Empty;

    //private async Task ChangePassword()
    //{
    //    var result = await AuthService.ChangePassword(request);
    //    message = result.Message;
    //}
}
